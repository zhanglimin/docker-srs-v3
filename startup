#!/bin/bash
REPO=aesirteam/docker-srs-v3
TAG=latest
D_RTMP_PORT=1935
D_HTTPAPI_PORT=1985
S_CONFIG_FILE=conf/default.conf
TARGET_DIR=/usr/local/srs

usage() {
  echo "USAGE: $0 [-t raspbian] -s <SERVER_PERFIX> [-p RTMP_PORT] [-a HTTP_API_PORT] [-c CONFIG_FILE]"
  echo "example: $0 -s srs-server -p 1935 -a 1985 -c /etc/default.conf"
  echo "         $0 -t raspbian -s myServer -p 1935:1940"
}

main() {
   RTMP_START_PORT=$((10#`echo $D_RTMP_PORT | cut -d \: -f1`))
   RTMP_END_PORT=$((10#`echo $D_RTMP_PORT | cut -d \: -f2`))
   API_START_PORT=$((10#`echo $D_HTTPAPI_PORT | cut -d \: -f1`))
   API_END_PORT=$((10#`echo $D_HTTPAPI_PORT | cut -d \: -f2`))
   _SERVER_NAME=$D_SERVER_NAME
   for((D_RTMP_PORT=$RTMP_START_PORT, D_HTTPAPI_PORT=$API_START_PORT; \
       $D_RTMP_PORT<=$RTMP_END_PORT; \
       D_RTMP_PORT++,D_HTTPAPI_PORT++))
   do
        D_SERVER_NAME=$_SERVER_NAME"_"$D_RTMP_PORT"_"$D_HTTPAPI_PORT
:<<!	
	echo $D_SERVER_NAME"  "$D_RTMP_PORT"  "$D_HTTPAPI_PORT
	echo `dirname $PWD/$0`"/"$D_SERVER_NAME/conf:$TARGET_DIR/conf
!
	SERVER_DATA_PATH=`dirname $PWD/$0`"/"$D_SERVER_NAME
   	if [ ! -d $SERVER_DATA_PATH ]; then
      	   mkdir -p $SERVER_DATA_PATH/conf $SERVER_DATA_PATH/html $SERVER_DATA_PATH/logs
      	   cp $S_CONFIG_FILE $SERVER_DATA_PATH/conf/srs.conf
        fi
	#run docker image
   	sudo docker run -d \
     	  -v $SERVER_DATA_PATH/conf:$TARGET_DIR/conf \
          -v $SERVER_DATA_PATH/html:$TARGET_DIR/objs/nginx/html \
          -v $SERVER_DATA_PATH/logs:$TARGET_DIR/logs \
          -p $D_RTMP_PORT:1935 \
          -p $D_HTTPAPI_PORT:1985 \
	  --restart=always \
          --name $D_SERVER_NAME $REPO:$TAG
   done
}


if [ $# -lt 1 ]; then
   usage
   exit 1
fi

while getopts ":t:s:p:a:c:" arg
do
    case $arg in
       t)
           if [ "$OPTARG" = "raspbian" ]; then
  	     TAG=$OPTARG
           fi
	   ;;
       s)
	   D_SERVER_NAME=$OPTARG
           ;;
       p)
	   D_RTMP_PORT=$OPTARG
	   ;;
       a)
	   D_HTTPAPI_PORT=$OPTARG
	   ;;  
       c)
	   S_CONFIG_FILE=$OPTARG 
	   ;;
       ?)
           usage
           exit 1
           ;;
    esac
done

if [ -n $D_SERVER_NAME ]; then
   usage
   exit 1
fi

if [ ! -f $S_CONFIG_FILE ]; then
   echo "Cannot access $S_CONFIG_FILE: No such file or directory"
   exit 1
fi

main
